{"version":3,"sources":["./src/app/securite-laboratoire/formation-information/formation-information-routing.module.ts","./src/app/securite-laboratoire/formation-information/formation-information.component.ts","./src/app/securite-laboratoire/formation-information/formation-information.component.html","./src/app/securite-laboratoire/formation-information/formation-information.module.ts","./src/app/securite-laboratoire/formation-information/formation/formation.component.ts","./src/app/securite-laboratoire/formation-information/formation/formation.component.html","./src/app/securite-laboratoire/formation-information/information/information.component.ts","./src/app/securite-laboratoire/formation-information/information/information.component.html"],"names":[],"mappings":"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","file":"formation-information-formation-information-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormationInformationComponent } from './formation-information.component';\r\nimport { FormationComponent } from './formation/formation.component';\r\nimport { InformationComponent } from './information/information.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: FormationInformationComponent },\r\n  { path: 'Formation', component: FormationComponent },\r\n  { path: 'Information', component: InformationComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormationInformationRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PDFProgressData } from 'ng2-pdf-viewer';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { Params_Get_Section_By_SECTION_ID, Section , Proxy } from 'src/app/core/services/proxy.service';\r\n\r\n@Component({\r\n  selector: 'app-formation-information',\r\n  templateUrl: './formation-information.component.html',\r\n  styleUrls: ['./formation-information.component.scss']\r\n})\r\nexport class FormationInformationComponent implements OnInit, OnDestroy {\r\n  pdfSrc: string = \"\";\r\n  subscriptions: Subscription[] = [];\r\n  getSectionsParams: Params_Get_Section_By_SECTION_ID = new Params_Get_Section_By_SECTION_ID();\r\n  sections: Section[] = [];\r\n  uploadImage: any[] = [];\r\n  constructor(private _proxy: Proxy, private _CmSvc: CommonService, private spinner : NgxSpinnerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\nonProgress(progressData : PDFProgressData){\r\n      if(progressData.loaded == progressData.total){\r\n       this.spinner.hide();\r\n      }\r\n     }\r\n  fetchData() {\r\n    this.spinner.show();\r\n    this.getSectionsParams.SECTION_ID = 16;\r\n    this.subscriptions.push(\r\n      this._proxy\r\n        .Get_Section_By_SECTION_ID(this.getSectionsParams)\r\n        .subscribe((result) => {\r\n          if (result != null) {\r\n            this.uploadImage.push(result);\r\n            this.uploadImage.forEach((element: any) => {\r\n              element.MyURL =\r\n                this._CmSvc.APIUrl +\r\n                \"/Upload_Image?REL_ENTITY=[TBL_SECTION]&REL_FIELD=SECTION_IMAGE&REL_KEY=\" +\r\n                element.SECTION_ID;\r\n              if (element.My_Uploaded_files != null) {\r\n                element.MyUploadedImages = [];\r\n                element.My_Uploaded_files.forEach((x) => {\r\n                  this.pdfSrc = x.My_URL;\r\n                  element.MyUploadedImages.push(x.My_URL);\r\n                });\r\n              }\r\n              this.sections.push(element);\r\n              this._CmSvc.setValue(false);\r\n            });\r\n          }\r\n        })\r\n    );\r\n  }\r\n}\r\n","<div class=\"container custom\">\r\n  <div class=\"pdf-container\" style=\"position: relative; min-height: 500px\">\r\n    <ngx-spinner       bdColor=\"rgba(255,255,255\"      size=\"large\"\r\n      color=\"#1c9042\"\r\n      type=\"ball-spin-fade-rotating\"\r\n      [fullScreen]=\"false\"\r\n    ></ngx-spinner>\r\n    <pdf-viewer\r\n      (on-progress)=\"onProgress($event)\"\r\n      [src]=\"pdfSrc\"\r\n       [original-size]=\"false\"\r\n      [render-text]=\"true\"\r\n      [external-link-target]=\"'blank'\"\r\n    ></pdf-viewer>\r\n  </div>\r\n  </div>\r\n","import { DemoMaterialModule } from './../../core/Material/material.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormationInformationRoutingModule } from './formation-information-routing.module';\r\nimport { FormationInformationComponent } from './formation-information.component';\r\nimport { FormationComponent } from './formation/formation.component';\r\nimport { InformationComponent } from './information/information.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FormationInformationComponent, FormationComponent, InformationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormationInformationRoutingModule,\r\n    DemoMaterialModule,\r\n    NgxSpinnerModule\r\n  ]\r\n})\r\nexport class FormationInformationModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PDFProgressData } from 'ng2-pdf-viewer';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { Params_Get_Section_By_SECTION_ID, Section , Proxy } from 'src/app/core/services/proxy.service';\r\n\r\n@Component({\r\n  selector: 'app-formation',\r\n  templateUrl: './formation.component.html',\r\n  styleUrls: ['./formation.component.scss']\r\n})\r\nexport class FormationComponent implements OnInit, OnDestroy {\r\n  pdfSrc: string = \"\";\r\n  subscriptions: Subscription[] = [];\r\n  getSectionsParams: Params_Get_Section_By_SECTION_ID = new Params_Get_Section_By_SECTION_ID();\r\n  sections: Section[] = [];\r\n  uploadImage: any[] = [];\r\n  constructor(private _proxy: Proxy, private _CmSvc: CommonService, private spinner : NgxSpinnerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\nonProgress(progressData : PDFProgressData){\r\n      if(progressData.loaded == progressData.total){\r\n       this.spinner.hide();\r\n      }\r\n     }\r\n  fetchData() {\r\n    this.spinner.show();\r\n    this.getSectionsParams.SECTION_ID = 17;\r\n    this.subscriptions.push(\r\n      this._proxy\r\n        .Get_Section_By_SECTION_ID(this.getSectionsParams)\r\n        .subscribe((result) => {\r\n          if (result != null) {\r\n            this.uploadImage.push(result);\r\n            this.uploadImage.forEach((element: any) => {\r\n              element.MyURL =\r\n                this._CmSvc.APIUrl +\r\n                \"/Upload_Image?REL_ENTITY=[TBL_SECTION]&REL_FIELD=SECTION_IMAGE&REL_KEY=\" +\r\n                element.SECTION_ID;\r\n              if (element.My_Uploaded_files != null) {\r\n                element.MyUploadedImages = [];\r\n                element.My_Uploaded_files.forEach((x) => {\r\n                  this.pdfSrc = x.My_URL;\r\n                  element.MyUploadedImages.push(x.My_URL);\r\n                });\r\n              }\r\n              this.sections.push(element);\r\n              this._CmSvc.setValue(false);\r\n            });\r\n          }\r\n        })\r\n    );\r\n  }\r\n}\r\n","<div class=\"container custom\">\r\n  <div class=\"pdf-container\" style=\"position: relative; min-height: 500px\">\r\n    <ngx-spinner       bdColor=\"rgba(255,255,255\"      size=\"large\"\r\n      color=\"#1c9042\"\r\n      type=\"ball-spin-fade-rotating\"\r\n      [fullScreen]=\"false\"\r\n    ></ngx-spinner>\r\n    <pdf-viewer\r\n      (on-progress)=\"onProgress($event)\"\r\n      [src]=\"pdfSrc\"\r\n       [original-size]=\"false\"\r\n      [render-text]=\"true\"\r\n      [external-link-target]=\"'blank'\"\r\n    ></pdf-viewer>\r\n  </div>\r\n  </div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PDFProgressData } from 'ng2-pdf-viewer';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommonService } from 'src/app/core/services/common.service';\r\nimport { Params_Get_Section_By_SECTION_ID, Section , Proxy} from 'src/app/core/services/proxy.service';\r\n\r\n@Component({\r\n  selector: 'app-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.scss']\r\n})\r\nexport class InformationComponent implements OnInit, OnDestroy {\r\n  pdfSrc: string = \"\";\r\n  subscriptions: Subscription[] = [];\r\n  getSectionsParams: Params_Get_Section_By_SECTION_ID = new Params_Get_Section_By_SECTION_ID();\r\n  sections: Section[] = [];\r\n  uploadImage: any[] = [];\r\n  constructor(private _proxy: Proxy, private _CmSvc: CommonService, private spinner : NgxSpinnerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\nonProgress(progressData : PDFProgressData){\r\n      if(progressData.loaded == progressData.total){\r\n       this.spinner.hide();\r\n      }\r\n     }\r\n  fetchData() {\r\n    this.spinner.show();\r\n    this.getSectionsParams.SECTION_ID = 18;\r\n    this.subscriptions.push(\r\n      this._proxy\r\n        .Get_Section_By_SECTION_ID(this.getSectionsParams)\r\n        .subscribe((result) => {\r\n          if (result != null) {\r\n            this.uploadImage.push(result);\r\n            this.uploadImage.forEach((element: any) => {\r\n              element.MyURL =\r\n                this._CmSvc.APIUrl +\r\n                \"/Upload_Image?REL_ENTITY=[TBL_SECTION]&REL_FIELD=SECTION_IMAGE&REL_KEY=\" +\r\n                element.SECTION_ID;\r\n              if (element.My_Uploaded_files != null) {\r\n                element.MyUploadedImages = [];\r\n                element.My_Uploaded_files.forEach((x) => {\r\n                  this.pdfSrc = x.My_URL;\r\n                  element.MyUploadedImages.push(x.My_URL);\r\n                });\r\n              }\r\n              this.sections.push(element);\r\n              this._CmSvc.setValue(false);\r\n            });\r\n          }\r\n        })\r\n    );\r\n  }\r\n}\r\n","<div class=\"container custom\">\r\n  <div class=\"pdf-container\" style=\"position: relative; min-height: 500px\">\r\n    <ngx-spinner       bdColor=\"rgba(255,255,255\"      size=\"large\"\r\n      color=\"#1c9042\"\r\n      type=\"ball-spin-fade-rotating\"\r\n      [fullScreen]=\"false\"\r\n    ></ngx-spinner>\r\n    <pdf-viewer\r\n      (on-progress)=\"onProgress($event)\"\r\n      [src]=\"pdfSrc\"\r\n       [original-size]=\"false\"\r\n      [render-text]=\"true\"\r\n      [external-link-target]=\"'blank'\"\r\n    ></pdf-viewer>\r\n  </div>\r\n  </div>\r\n"],"sourceRoot":"webpack:///"}